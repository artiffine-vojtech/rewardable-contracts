/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RewardDistributorV1LZMock,
  RewardDistributorV1LZMockInterface,
} from "../../../../contracts/mocks/RewardDistributorV1LZMock.sol/RewardDistributorV1LZMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "optionType",
        type: "uint16",
      },
    ],
    name: "InvalidOptionType",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
    ],
    name: "BurnFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "FeeReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxDailyWithdrawal",
        type: "uint256",
      },
    ],
    name: "MaxDailyWithdrawalSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "minWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "MinWithdrawalAmountSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
    ],
    name: "PlatformFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "ProcessedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sponsor",
        type: "address",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sponsor",
        type: "address",
      },
    ],
    name: "TaskToppedUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAdmin",
        type: "address",
      },
    ],
    name: "TokenAdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "identity",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnRewards",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addToTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_recoverAmount",
        type: "uint256",
      },
    ],
    name: "burnFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
    ],
    name: "createTask",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "createTaskWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSameChainLZSendParam",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "addGas",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "addEther",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "topUp",
            type: "uint128",
          },
        ],
        internalType: "struct RewardDistributorV1LZMock.LZSendParam",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_platformFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDailyWithdrawal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDailyWithdrawal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_identity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "addGas",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "addEther",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "topUp",
            type: "uint128",
          },
        ],
        internalType: "struct RewardDistributorV1LZMock.LZSendParam",
        name: "_lzSendParam",
        type: "tuple",
      },
    ],
    name: "quoteSend",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
    ],
    name: "setBurnFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxDailyWithdrawal",
        type: "uint256",
      },
    ],
    name: "setMaxDailyWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "setMinWithdrawalAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_platformFee",
        type: "uint256",
      },
    ],
    name: "setPlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAdmin",
        type: "address",
      },
    ],
    name: "setTokenAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "taskRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
    ],
    name: "topUpTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "topUpTaskWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_identity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "addGas",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "addEther",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "topUp",
            type: "uint128",
          },
        ],
        internalType: "struct RewardDistributorV1LZMock.LZSendParam",
        name: "_lzSendParam",
        type: "tuple",
      },
    ],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawnRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612f4a6200010460003960008181611b8101528181611baa0152611ceb0152612f4a6000f3fe6080604052600436106101f95760003560e01c80639bb13a241161010d578063c843e81c116100a0578063f2fde38b1161006f578063f2fde38b14610605578063f745759414610625578063f7c618c114610645578063f8a8fd6d14610665578063fce589d81461067b57600080fd5b8063c843e81c1461050d578063d56f15311461052d578063dd6624e4146105b8578063efdcd974146105e557600080fd5b8063b3f00674116100dc578063b3f0067414610497578063b7e1917c146104b7578063b87d1bc5146104d7578063c383888d146104ed57600080fd5b80639bb13a24146104045780639cbd686e146104245780639d54c9fe14610439578063ad3cb1cc1461045957600080fd5b80635ba864d51161019057806385b5b14d1161015f57806385b5b14d146103455780638da5cb5b146103655780638ffff615146103925780639285c94b146103b25780639a8a0592146103d257600080fd5b80635ba864d5146102da578063715018a6146102fa578063774512291461030f5780638312f1491461032f57600080fd5b80633b591b2a116101cc5780633b591b2a1461027f5780634bf2c7c9146102925780634f1ef286146102b257806352d1902d146102c557600080fd5b80630342a6ba146101fe57806312e8e2c314610220578063246ea64e1461024057806326232a2e14610269575b600080fd5b34801561020a57600080fd5b5061021e610219366004612558565b610691565b005b34801561022c57600080fd5b5061021e61023b366004612558565b61085f565b34801561024c57600080fd5b5061025660075481565b6040519081526020015b60405180910390f35b34801561027557600080fd5b5061025660045481565b61021e61028d366004612586565b6108bc565b34801561029e57600080fd5b5061021e6102ad366004612558565b610f2d565b61021e6102c03660046126d5565b610f8a565b3480156102d157600080fd5b50610256610fa9565b3480156102e657600080fd5b506102566102f5366004612753565b610fc6565b34801561030657600080fd5b5061021e61115b565b34801561031b57600080fd5b5061025661032a366004612804565b61116f565b34801561033b57600080fd5b5061025660065481565b34801561035157600080fd5b5061021e610360366004612558565b61125d565b34801561037157600080fd5b5061037a611298565b6040516001600160a01b039091168152602001610260565b34801561039e57600080fd5b5061021e6103ad366004612558565b6112c6565b3480156103be57600080fd5b506102566103cd366004612558565b611323565b3480156103de57600080fd5b50600a546103ef9063ffffffff1681565b60405163ffffffff9091168152602001610260565b34801561041057600080fd5b5061021e61041f366004612845565b611344565b34801561043057600080fd5b5061021e6113c1565b34801561044557600080fd5b506102566104543660046128b4565b6113e3565b34801561046557600080fd5b5061048a604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102609190612969565b3480156104a357600080fd5b5060025461037a906001600160a01b031681565b3480156104c357600080fd5b5060015461037a906001600160a01b031681565b3480156104e357600080fd5b5061025660055481565b3480156104f957600080fd5b5061021e61050836600461297c565b611462565b34801561051957600080fd5b5061021e6105283660046129b5565b611583565b34801561053957600080fd5b50604080516080808201835260008083526020808401829052838501829052606093840182905284518084018652600a5463ffffffff168082528183018481528288018581529287019485528751918252516001600160801b039081169382019390935290518216958101959095529051169183019190915201610260565b3480156105c457600080fd5b506102566105d3366004612a35565b60086020526000908152604090205481565b3480156105f157600080fd5b5061021e610600366004612a35565b6118d6565b34801561061157600080fd5b5061021e610620366004612a35565b611928565b34801561063157600080fd5b5061021e610640366004612a35565b611966565b34801561065157600080fd5b5060005461037a906001600160a01b031681565b34801561067157600080fd5b50610256600d5481565b34801561068757600080fd5b5061025660035481565b610699611a0e565b6007548111156106e15760405162461bcd60e51b815260206004820152600e60248201526d22bc31b2b2b239903a37a13ab93760911b60448201526064015b60405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190612a52565b81111561078e5760405162461bcd60e51b815260206004820152600f60248201526e457863656564732062616c616e636560881b60448201526064016106d8565b60008160075461079e9190612a81565b60006007559050801561080a57600054604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050505b811561082e5761082e61081b611298565b6000546001600160a01b03169084611a40565b604051829082907fcec1bae6e024d929f2929f3478ce70f55f9c636c8ef7b5073a61d7c3a432451b90600090a35050565b610867611a0e565b6127108111156108895760405162461bcd60e51b81526004016106d890612a94565b600481905560405181907fdc4e4be378c228e1b7b13787e1d0620609304c2f71ed3a6ee69e4aae99d58cd990600090a250565b600080806108cc85870187612aba565b6040517f19457468657265756d205369676e6564204d6573736167653a0a35320000000060208201526bffffffffffffffffffffffff1960608d901b16603c82015260508101849052929550909350915060009060700160405160208183030381529060405280519060200120905080831461098a5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642070726f6f66206f662072657761726473000000000000000060448201526064016106d8565b6001546001600160a01b03166109a08484611aa4565b6001600160a01b0316146109ed5760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b210383937b7b31039b4b3b732b960611b60448201526064016106d8565b600654881015610a3f5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e74203c206d696e207769746864726177616c20616d6f756e74000060448201526064016106d8565b6001600160a01b0389166000908152600860205260409020548490610a65908a90612b0a565b1115610ab35760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206d617820746f207769746864726177000060448201526064016106d8565b6000610ac26201518042612b1d565b9050600b54811115610ad957600b8190556000600c555b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190612a52565b905061271060055482610b599190612b3f565b610b639190612b1d565b8a600c54610b719190612b0a565b1115610bbf5760405162461bcd60e51b815260206004820152601f60248201527f4461696c79207769746864726177616c206c696d69742065786365656465640060448201526064016106d8565b89600c6000828254610bd19190612b0a565b90915550506001600160a01b038b16600090815260086020526040812080548c9290610bfe908490612b0a565b9091555050600a5463ffffffff16610c196020890189612b56565b63ffffffff1603610c4057600054610c3b906001600160a01b03168c8c611a40565b610eea565b6000610c6860408051600360f01b602082015281516002818303018152602290910190915290565b90506000610c7c60608a0160408b01612b73565b610c8c60408b0160208c01612b73565b610c969190612b8e565b6001600160801b03161115610cd357610cd0610cb860408a0160208b01612b73565b610cc860608b0160408c01612b73565b839190611ad0565b90505b6000610ce560808a0160608b01612b73565b6001600160801b03161115610d1d57610d1a610d0760808a0160608b01612b73565b6001600160a01b038e165b839190611b38565b90505b6040805160e0810190915260009080610d3960208c018c612b56565b63ffffffff1681526020016001600160a01b038f1681526020018d81526020018d815260200183815260200160405180602001604052806000815250815260200160405180602001604052806000815250815250905060008060009054906101000a90046001600160a01b03166001600160a01b0316633b6f743b8360006040518363ffffffff1660e01b8152600401610dd4929190612c2b565b6040805180830381865afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190612c9e565b90503481600001511115610e6a5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e742065746865722076616c7565000000000000000060448201526064016106d8565b600054815160405163c7c7f5b360e01b81526001600160a01b039092169163c7c7f5b39190610ea190869086903390600401612cba565b60c06040518083038185885af1158015610ebf573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ee49190612cf9565b50505050505b6040518a906001600160a01b038d16907fbd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e61690600090a35050505050505050505050565b610f35611a0e565b612710811115610f575760405162461bcd60e51b81526004016106d890612a94565b600381905560405181907f6aa481ed384822c7b3e905d64ce6b44fb715f13e387c50fab2d68e387540094d90600090a250565b610f92611b76565b610f9b82611c1b565b610fa58282611c23565b5050565b6000610fb3611ce0565b50600080516020612ef583398151915290565b600080610fef60408051600360f01b602082015281516002818303018152602290910190915290565b90506000836040015184602001516110079190612b8e565b6001600160801b0316111561102e576020830151604084015161102b918391611ad0565b90505b60608301516001600160801b03161561105c576110598360600151610d12876001600160a01b031690565b90505b60006040518060e00160405280856000015163ffffffff168152602001611089886001600160a01b031690565b815260200186815260200186815260200183815260200160405180602001604052806000815250815260200160405180602001604052806000815250815250905060008060009054906101000a90046001600160a01b03166001600160a01b0316633b6f743b8360006040518363ffffffff1660e01b815260040161110f929190612c2b565b6040805180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f9190612c9e565b51979650505050505050565b611163611a0e565b61116d6000611d29565b565b60008083116111b45760405162461bcd60e51b815260206004820152601160248201527005f726577617264416d6f756e74203d203607c1b60448201526064016106d8565b6000546111cc906001600160a01b0316833086611d9a565b60006111d784611dd9565b600980546001818101835560008390527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af909101839055905491925061121c91612a81565b9150826001600160a01b031681837f608625ab6f77a46173f4140d5795b7128dc6e75d7ae867d32b5e49ae02cde65260405160405180910390a45092915050565b611265611a0e565b600681905560405181907f8f014241b395151fea9fd3c450618b337903211e4148d17575d90c463b531c5c90600090a250565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6112ce611a0e565b6127108111156112f05760405162461bcd60e51b81526004016106d890612a94565b600581905560405181907fea80352023ddced572abff82545e0aff74f2b39aa08e21e5f185a25806523dd290600090a250565b6009818154811061133357600080fd5b600091825260209091200154905081565b60005460405163d505accf60e01b81526001600160a01b039091169063d505accf9061138090899030908a908a908a908a908a90600401612d8d565b600060405180830381600087803b15801561139a57600080fd5b505af19250505080156113ab575060015b506113b7888888611462565b5050505050505050565b6113c9611a0e565b6001600d60008282546113dc9190612b0a565b9091555050565b6000805460405163d505accf60e01b81526001600160a01b039091169063d505accf90611420908a9030908b908b908b908b908b90600401612d8d565b600060405180830381600087803b15801561143a57600080fd5b505af192505050801561144b575060015b50611456888861116f565b98975050505050505050565b600083116114a75760405162461bcd60e51b81526020600482015260126024820152710546f7020757020616d6f756e7420697320360741b60448201526064016106d8565b60095482106114ee5760405162461bcd60e51b815260206004820152601360248201527215185cdac8191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016106d8565b600054611506906001600160a01b0316823086611d9a565b600061151184611dd9565b9050806009848154811061152757611527612dce565b9060005260206000200160008282546115409190612b0a565b90915550506040516001600160a01b03831690829085907f0e7f6cfbe321f0be58866f990b36df8caa522f059103cbbeff3372afccbb0a6b90600090a450505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156115c95750825b905060008267ffffffffffffffff1660011480156115e65750303b155b9050811580156115f4575080155b156116125760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561163c57845460ff60401b1916600160401b1785555b61271089111561167f5760405162461bcd60e51b815260206004820152600e60248201526d17d89d5c9b919959480f880c594d60921b60448201526064016106d8565b6127108811156116c65760405162461bcd60e51b815260206004820152601260248201527117dc1b185d199bdc9b519959480f880c594d60721b60448201526064016106d8565b6127108711156117185760405162461bcd60e51b815260206004820152601960248201527f5f6d61784461696c795769746864726177616c203e203165340000000000000060448201526064016106d8565b6117218d611eae565b600080546001600160a01b0319166001600160a01b038e1690811790915560408051635e280f1160e01b81529051635e280f11916004808201926020929091908290030181865afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e9190612de4565b6001600160a01b031663416ecebf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ff9190612e01565b600a805463ffffffff9290921663ffffffff19909216919091179055600180546001600160a01b03808e166001600160a01b03199283161790925560028054928d1692909116919091179055600389905560048890556005879055600686905561186c6201518042612b1d565b600b556000600c5561187e888a612b0a565b600d5583156118c757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6118de611a0e565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b611930611a0e565b6001600160a01b03811661195a57604051631e4fbdf760e01b8152600060048201526024016106d8565b61196381611d29565b50565b61196e611a0e565b6001600160a01b0381166119c45760405162461bcd60e51b815260206004820152601960248201527f546f6b656e2061646d696e20697320616464726573732830290000000000000060448201526064016106d8565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fd5f4c713589e8a5f8772f81c9a5189b03f01a579e559d0a3c9f6306a26d1eb3390600090a250565b33611a17611298565b6001600160a01b03161461116d5760405163118cdaa760e01b81523360048201526024016106d8565b6040516001600160a01b03838116602483015260448201839052611a9f91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611ebf565b505050565b600080600080611ab48686611f22565b925092509250611ac48282611f6f565b50909150505b92915050565b6060836003611ae0826000612028565b61ffff1614611b1457611af4816000612028565b604051633a51740d60e01b815261ffff90911660048201526024016106d8565b6000611b208585612085565b9050611b2e866001836120ff565b9695505050505050565b6060836003611b48826000612028565b61ffff1614611b5c57611af4816000612028565b6000611b68858561216a565b9050611b2e866002836120ff565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611bfd57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611bf1600080516020612ef5833981519152546001600160a01b031690565b6001600160a01b031614155b1561116d5760405163703e46dd60e11b815260040160405180910390fd5b611963611a0e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c7d575060408051601f3d908101601f19168201909252611c7a91810190612a52565b60015b611ca557604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106d8565b600080516020612ef58339815191528114611cd657604051632a87526960e21b8152600481018290526024016106d8565b611a9f8383612193565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461116d5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6040516001600160a01b038481166024830152838116604483015260648201839052611dd39186918216906323b872dd90608401611a6d565b50505050565b6000600454612710611deb9190612b0a565b611df783612710612b3f565b611e019190612b1d565b90506000611e0f8284612a81565b9050600061271060035483611e249190612b3f565b611e2e9190612b1d565b90508060076000828254611e429190612b0a565b9091555060009050611e548284612a81565b90508015611e7957600254600054611e79916001600160a01b03918216911683611a40565b604051829082907f4b7c5767553757dfec49c7e7837541bdd95d2748daf4db5ac95772215b51d6d390600090a3505050919050565b611eb66121e9565b61196381612232565b6000611ed46001600160a01b0384168361223a565b90508051600014158015611ef9575080806020019051810190611ef79190612e1e565b155b15611a9f57604051635274afe760e01b81526001600160a01b03841660048201526024016106d8565b60008060008351604103611f5c5760208401516040850151606086015160001a611f4e88828585612248565b955095509550505050611f68565b50508151600091506002905b9250925092565b6000826003811115611f8357611f83612e40565b03611f8c575050565b6001826003811115611fa057611fa0612e40565b03611fbe5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611fd257611fd2612e40565b03611ff35760405163fce698f760e01b8152600481018290526024016106d8565b600382600381111561200757612007612e40565b03610fa5576040516335e2f38360e21b8152600481018290526024016106d8565b6000612035826002612b0a565b8351101561207c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016106d8565b50016002015190565b60606001600160801b038216156120cd57604080516001600160801b0319608086811b8216602084015285901b166030820152016040516020818303038152906040526120f8565b6040516001600160801b0319608085901b1660208201526030015b6040516020818303038152906040525b9392505050565b606083600361210f826000612028565b61ffff161461212357611af4816000612028565b8460016121308551612317565b61213b906001612e56565b8686604051602001612151959493929190612e71565b6040516020818303038152906040529150509392505050565b6040516001600160801b0319608084901b166020820152603081018290526060906050016120e8565b61219c8261234a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156121e157611a9f82826123af565b610fa5612425565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661116d57604051631afcd79f60e31b815260040160405180910390fd5b6119306121e9565b60606120f883836000612444565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115612283575060009150600390508261230d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156122d7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123035750600092506001915082905061230d565b9250600091508190505b9450945094915050565b600061ffff821115612346576040516306dfcc6560e41b815260106004820152602481018390526044016106d8565b5090565b806001600160a01b03163b60000361238057604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106d8565b600080516020612ef583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516123cc9190612ed8565b600060405180830381855af49150503d8060008114612407576040519150601f19603f3d011682016040523d82523d6000602084013e61240c565b606091505b509150915061241c8583836124d3565b95945050505050565b341561116d5760405163b398979f60e01b815260040160405180910390fd5b6060814710156124695760405163cd78605960e01b81523060048201526024016106d8565b600080856001600160a01b031684866040516124859190612ed8565b60006040518083038185875af1925050503d80600081146124c2576040519150601f19603f3d011682016040523d82523d6000602084013e6124c7565b606091505b5091509150611b2e8683835b6060826124e8576124e38261252f565b6120f8565b81511580156124ff57506001600160a01b0384163b155b1561252857604051639996b31560e01b81526001600160a01b03851660048201526024016106d8565b50806120f8565b80511561253f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561256a57600080fd5b5035919050565b6001600160a01b038116811461196357600080fd5b600080600080600085870360e081121561259f57600080fd5b86356125aa81612571565b955060208701359450604087013567ffffffffffffffff808211156125ce57600080fd5b818901915089601f8301126125e257600080fd5b8135818111156125f157600080fd5b8a602082850101111561260357600080fd5b6020929092019550909350506080605f198201121561262157600080fd5b506060860190509295509295909350565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261265957600080fd5b813567ffffffffffffffff8082111561267457612674612632565b604051601f8301601f19908116603f0116810190828211818310171561269c5761269c612632565b816040528381528660208588010111156126b557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156126e857600080fd5b82356126f381612571565b9150602083013567ffffffffffffffff81111561270f57600080fd5b61271b85828601612648565b9150509250929050565b63ffffffff8116811461196357600080fd5b80356001600160801b038116811461274e57600080fd5b919050565b600080600083850360c081121561276957600080fd5b843561277481612571565b9350602085013592506080603f198201121561278f57600080fd5b506040516080810181811067ffffffffffffffff821117156127b3576127b3612632565b60409081528501356127c481612725565b81526127d260608601612737565b60208201526127e360808601612737565b60408201526127f460a08601612737565b6060820152809150509250925092565b6000806040838503121561281757600080fd5b82359150602083013561282981612571565b809150509250929050565b803560ff8116811461274e57600080fd5b600080600080600080600080610100898b03121561286257600080fd5b8835975060208901359650604089013561287b81612571565b9550606089013594506080890135935061289760a08a01612834565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a0312156128cf57600080fd5b8735965060208801356128e181612571565b955060408801359450606088013593506128fd60808901612834565b925060a0880135915060c0880135905092959891949750929550565b60005b8381101561293457818101518382015260200161291c565b50506000910152565b60008151808452612955816020860160208601612919565b601f01601f19169290920160200192915050565b6020815260006120f8602083018461293d565b60008060006060848603121561299157600080fd5b833592506020840135915060408401356129aa81612571565b809150509250925092565b600080600080600080600080610100898b0312156129d257600080fd5b88356129dd81612571565b975060208901356129ed81612571565b965060408901356129fd81612571565b95506060890135612a0d81612571565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b600060208284031215612a4757600080fd5b81356120f881612571565b600060208284031215612a6457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611aca57611aca612a6b565b6020808252600c908201526b45786365656473203130302560a01b604082015260600190565b600080600060608486031215612acf57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612af457600080fd5b612b0086828701612648565b9150509250925092565b80820180821115611aca57611aca612a6b565b600082612b3a57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611aca57611aca612a6b565b600060208284031215612b6857600080fd5b81356120f881612725565b600060208284031215612b8557600080fd5b6120f882612737565b6001600160801b03818116838216019080821115612bae57612bae612a6b565b5092915050565b63ffffffff81511682526020810151602083015260408101516040830152606081015160608301526000608082015160e06080850152612bf860e085018261293d565b905060a083015184820360a0860152612c11828261293d565b91505060c083015184820360c086015261241c828261293d565b604081526000612c3e6040830185612bb5565b905082151560208301529392505050565b600060408284031215612c6157600080fd5b6040516040810181811067ffffffffffffffff82111715612c8457612c84612632565b604052825181526020928301519281019290925250919050565b600060408284031215612cb057600080fd5b6120f88383612c4f565b608081526000612ccd6080830186612bb5565b8451602084810191909152909401516040830152506001600160a01b0391909116606090910152919050565b60008082840360c0811215612d0d57600080fd5b6080811215612d1b57600080fd5b506040516060810167ffffffffffffffff8282108183111715612d4057612d40612632565b8160405285518352602086015191508082168214612d5d57600080fd5b506020820152612d708560408601612c4f565b60408201529150612d848460808501612c4f565b90509250929050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612df657600080fd5b81516120f881612571565b600060208284031215612e1357600080fd5b81516120f881612725565b600060208284031215612e3057600080fd5b815180151581146120f857600080fd5b634e487b7160e01b600052602160045260246000fd5b61ffff818116838216019080821115612bae57612bae612a6b565b60008651612e83818460208b01612919565b6001600160f81b031960f888811b82169285019283526001600160f01b031960f089901b16600184015286901b1660038201528351612ec9816004840160208801612919565b01600401979650505050505050565b60008251612eea818460208701612919565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122084ba65f1b28b3c0ef7b03cfb731751b8bcfc294ee445115788cdc67ec3d84f8564736f6c63430008180033";

type RewardDistributorV1LZMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardDistributorV1LZMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardDistributorV1LZMock__factory extends ContractFactory {
  constructor(...args: RewardDistributorV1LZMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardDistributorV1LZMock> {
    return super.deploy(overrides || {}) as Promise<RewardDistributorV1LZMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardDistributorV1LZMock {
    return super.attach(address) as RewardDistributorV1LZMock;
  }
  override connect(signer: Signer): RewardDistributorV1LZMock__factory {
    return super.connect(signer) as RewardDistributorV1LZMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardDistributorV1LZMockInterface {
    return new utils.Interface(_abi) as RewardDistributorV1LZMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardDistributorV1LZMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RewardDistributorV1LZMock;
  }
}
