/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Rewardable,
  RewardableInterface,
} from "../../contracts/Rewardable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620015d0380380620015d0833981016040819052620000359162000394565b6040518060400160405280600a81526020016952657761726461626c6560b01b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600a81526020016952657761726461626c6560b01b81525060405180604001604052806006815260200165149155d0549160d21b8152508160039081620000c6919062000455565b506004620000d5828262000455565b50620000e791508390506005620001a3565b61012052620000f8816006620001a3565b61014052815160208084019190912060e052815190820120610100524660a0526200018660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200019c3382620001dc565b50620005b9565b6000602083511015620001c357620001bb836200021e565b9050620001d6565b81620001d0848262000455565b5060ff90505b92915050565b6001600160a01b0382166200020c5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6200021a6000838362000261565b5050565b600080829050601f815111156200024c578260405163305a27a960e01b815260040162000203919062000521565b8051620002598262000572565b179392505050565b6001600160a01b0383166200029057806002600082825462000284919062000597565b90915550620003049050565b6001600160a01b03831660009081526020819052604090205481811015620002e55760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000203565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620003225760028054829003905562000341565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200038791815260200190565b60405180910390a3505050565b600060208284031215620003a757600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003d957607f821691505b602082108103620003fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000450576000816000526020600020601f850160051c810160208610156200042b5750805b601f850160051c820191505b818110156200044c5782815560010162000437565b5050505b505050565b81516001600160401b03811115620004715762000471620003ae565b6200048981620004828454620003c4565b8462000400565b602080601f831160018114620004c15760008415620004a85750858301515b600019600386901b1c1916600185901b1785556200044c565b600085815260208120601f198616915b82811015620004f257888601518255948401946001909101908401620004d1565b5085821015620005115787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b81811015620005515785810183015185820160400152820162000533565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003fa5760001960209190910360031b1b16919050565b80820180821115620001d657634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e051610100516101205161014051610fbc6200061460003960006107a601526000610779015260006106eb015260006106c30152600061061e01526000610648015260006106720152610fbc6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a082311161009757806395d89b411161006657806395d89b41146101f6578063a9059cbb146101fe578063d505accf14610211578063dd62ed3e1461022457600080fd5b806370a082311461018c57806379cc6790146101b55780637ecebe00146101c857806384b0196e146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e5151461016f57806342966c681461017757600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261025d565b60405161010f9190610d06565b60405180910390f35b61012b610126366004610d3c565b6102ef565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610d66565b610309565b6040516012815260200161010f565b61013f61032d565b61018a610185366004610da2565b61033c565b005b61013f61019a366004610dbb565b6001600160a01b031660009081526020819052604090205490565b61018a6101c3366004610d3c565b610349565b61013f6101d6366004610dbb565b610362565b6101e3610380565b60405161010f9796959493929190610dd6565b6101026103c6565b61012b61020c366004610d3c565b6103d5565b61018a61021f366004610e6f565b6103e3565b61013f610232366004610ee2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026c90610f15565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610f15565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b5050505050905090565b6000336102fd818585610522565b60019150505b92915050565b600033610317858285610534565b6103228585856105b2565b506001949350505050565b6000610337610611565b905090565b610346338261073c565b50565b610354823383610534565b61035e828261073c565b5050565b6001600160a01b038116600090815260076020526040812054610303565b600060608060008060006060610394610772565b61039c61079f565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461026c90610f15565b6000336102fd8185856105b2565b8342111561040c5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104598c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104b4826107cc565b905060006104c4828787876107f9565b9050896001600160a01b0316816001600160a01b03161461050b576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610403565b6105168a8a8a610522565b50505050505050505050565b61052f8383836001610827565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105ac578181101561059d57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610403565b6105ac84848484036000610827565b50505050565b6001600160a01b0383166105dc57604051634b637e8f60e11b815260006004820152602401610403565b6001600160a01b0382166106065760405163ec442f0560e01b815260006004820152602401610403565b61052f8383836108fc565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561066a57507f000000000000000000000000000000000000000000000000000000000000000046145b1561069457507f000000000000000000000000000000000000000000000000000000000000000090565b610337604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661076657604051634b637e8f60e11b815260006004820152602401610403565b61035e826000836108fc565b60606103377f00000000000000000000000000000000000000000000000000000000000000006005610a26565b60606103377f00000000000000000000000000000000000000000000000000000000000000006006610a26565b60006103036107d9610611565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061080b88888888610ad1565b92509250925061081b8282610ba0565b50909695505050505050565b6001600160a01b0384166108515760405163e602df0560e01b815260006004820152602401610403565b6001600160a01b03831661087b57604051634a1406b160e11b815260006004820152602401610403565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105ac57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108ee91815260200190565b60405180910390a350505050565b6001600160a01b03831661092757806002600082825461091c9190610f4f565b909155506109999050565b6001600160a01b0383166000908152602081905260409020548181101561097a5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610403565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166109b5576002805482900390556109d4565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1991815260200190565b60405180910390a3505050565b606060ff8314610a4057610a3983610c59565b9050610303565b818054610a4c90610f15565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890610f15565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b50505050509050610303565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610b0c5750600091506003905082610b96565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610b60573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b8c57506000925060019150829050610b96565b9250600091508190505b9450945094915050565b6000826003811115610bb457610bb4610f70565b03610bbd575050565b6001826003811115610bd157610bd1610f70565b03610bef5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610c0357610c03610f70565b03610c245760405163fce698f760e01b815260048101829052602401610403565b6003826003811115610c3857610c38610f70565b0361035e576040516335e2f38360e21b815260048101829052602401610403565b60606000610c6683610c98565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561030357604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610ce657602081850181015186830182015201610cca565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d196020830184610cc0565b9392505050565b80356001600160a01b0381168114610d3757600080fd5b919050565b60008060408385031215610d4f57600080fd5b610d5883610d20565b946020939093013593505050565b600080600060608486031215610d7b57600080fd5b610d8484610d20565b9250610d9260208501610d20565b9150604084013590509250925092565b600060208284031215610db457600080fd5b5035919050565b600060208284031215610dcd57600080fd5b610d1982610d20565b60ff60f81b881681526000602060e06020840152610df760e084018a610cc0565b8381036040850152610e09818a610cc0565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610e5d57835183529284019291840191600101610e41565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610e8a57600080fd5b610e9388610d20565b9650610ea160208901610d20565b95506040880135945060608801359350608088013560ff81168114610ec557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ef557600080fd5b610efe83610d20565b9150610f0c60208401610d20565b90509250929050565b600181811c90821680610f2957607f821691505b602082108103610f4957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030357634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122053858169d7abf502b04029e3110ca082f78613ad1156e9490344972388e8985a64736f6c63430008180033";

type RewardableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rewardable__factory extends ContractFactory {
  constructor(...args: RewardableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Rewardable> {
    return super.deploy(initialSupply, overrides || {}) as Promise<Rewardable>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): Rewardable {
    return super.attach(address) as Rewardable;
  }
  override connect(signer: Signer): Rewardable__factory {
    return super.connect(signer) as Rewardable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardableInterface {
    return new utils.Interface(_abi) as RewardableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Rewardable {
    return new Contract(address, _abi, signerOrProvider) as Rewardable;
  }
}
